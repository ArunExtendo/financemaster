/*
 * Java domain class for entity "MCustomer" 
 * Created on 2022-05-02 ( Date ISO 2022-05-02 - Time 15:42:10 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */
 
 /*
 * Created on 2022-05-02 ( 15:42:10 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */


package com.maan.life.repository;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.maan.life.bean.MCustomer;
/**
 * <h2>MCustomerRepository</h2>
 *
 * createdAt : 2022-05-02 - Time 15:42:10
 * <p>
 * Description: "MCustomer" Repository
 */
 
 
 
public interface MCustomerRepository  extends JpaRepository<MCustomer,String > , JpaSpecificationExecutor<MCustomer> {
	
	@Query(value = "select * from M_CUSTOMER where CUST_CODE = :custCode", nativeQuery = true)
	Page<MCustomer> findByCustCode( String custCode, Pageable paging);
	
	@Query(value = "select * from M_CUSTOMER where upper( CUST_CODE || CUST_NAME || CUST_GROUP_CODE || CUST_CC_TYPE || CUST_EFF_FM_DT || CUST_EFF_TO_DT || CUST_CREDIT_LIMIT || CUST_CREDIT_DAYS ) like upper(:search)", nativeQuery = true)
	Page<MCustomer> findAll(@Param("search") String search, Pageable paging);

	//Page<MCustomer> findById(String sear, String string, Pageable paging);

//	@Query(value = "select new com.maan.life.dto.MCustomerResponseDto(c.custCode,c.custName,c.custNameBl,c.custFirstName,c.custMiddleName,c.custLastName,c.custTitle,c.custShortName,"
//			+ "c.custShortNameBl,c.custCcCode,c.custCcType,c.custPhone,c.custPhoneBl,c.custFax,c.custFaxBl,c.custMobileNo,c.custMobileNoBl,c.custMailingAddr,c.custAddr01,c.custAddr01Bl,"
//			+ "c.custAddr02,c.custAddr02Bl,c.custAddr03,c.custAddr03Bl,c.custArea,c.custRegion,c.custCity,c.custCountry,c.custOffAddr01,c.custOffAddr01Bl,c.custOffAddr02,c.custOffAddr02Bl,"
//			+ "c.custOffAddr03,c.custOffAddr03Bl,c.custOffArea,c.custOffRegion,c.custOffCity,c.custOffCountry,c.custEmail1,c.custEmail2,c.custWebSite,c.custCreditChkYn,c.custCreditLimit,"
//			+ "c.custCreditDays,c.custEffFmDt,c.custEffToDt,c.custOffPhone,c.custOffPhoneBl,c.custOffFax,c.custOffFaxBl,c.custPoBox,c.custOffPoBox,c.custGender,c.custMaritalSts,c.custCivilId,"
//			+ "c.custNationality,c.custOccType,c.custLogoName,c.custGroupCode,c.custMakeFilterYn,c.custBodyFilterYn,c.custUsageFilterYn,c.custCylFilterYn,c.custMessage,c.custCrDt,c.custCrUid,"
//			+ "c.custUpdDt,c.custUpdUid,c.custDocEmailYn,c.custGarageFilterYn,c.custAgentPgYn,c.custLegalSts,c.custRegSts,c.custNatTran,c.custInterface,c.custRiskLvl,c.custRiskScore,c.custProdCode,"
//			+ "c.custCollCode,c.custHandCode,c.custSts,c.custContact,c.custAmRating,c.custSpRating,c.custRetailType,c.custDfltCurrCode,c.custDfltDeptCode,c.custDfltCostCentre,c.custDfltTaxCode,"
//			+ "c.custDfltNominalCode,c.custTaxRefNo,c.custTaxGrpCode,c.custSelfBillingYn,c.custDebitYn,c.custCompId,c.custCidExpDt,c.custTempToDt,c.custIndClass,c.custIdType,c.custProdRiskScore,"
//			+ "c.custJrsdRiskScore,c.custOtherRiskScore,c.custTotRiskScore,c.custIntfRiskScore,c.custAmlClass,c.custRconPeriod,c.custCnst,c.custContactMobile,c.custContactEmail,"
//			+ "c.custProdRiskScoreOrdn,c.custJrsdRiskScoreOrdn,c.custIntfRiskScoreOrdn,c.custOtherRiskScoreOrdn,c.custTotRiskScoreOrdn,c.custComplRemarks,c.custSignComplPrsnName,"
//			+ "c.custRelatedPartyTran,c.custLicIssuAuthr,c.custCivilIdUw,c.custContacFin,c.custEmailIdFin,"
//			+ "c.custMobileFin,c.custCivilIdFin,c.custNameArabic,c.custDob,a.acDesc,ac.acDesc) from MCustomer c inner join MAppCodes a on a.acCode = c.custGroupCode inner join MAppCodes ac on ac.acCode =c.custCcType")
//	         List<MCustomerResponseDto> findByMyDetails(Pageable paging);
//	
	
	
}
