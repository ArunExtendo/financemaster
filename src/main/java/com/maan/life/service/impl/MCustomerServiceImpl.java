/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-05-02 ( Date ISO 2022-05-02 - Time 15:42:10 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.life.service.impl;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Optional;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.maan.life.bean.MCustomer;
import com.maan.life.dto.ListViewParam;
import com.maan.life.repository.MCustomerRepository;
import com.maan.life.service.MCustomerService;
import com.maan.life.util.Convention;
import com.maan.life.util.ValidationUtil;

/**
 * <h2>MCustomerServiceimpl</h2>
 */
@Service
@Transactional
public class MCustomerServiceImpl implements MCustomerService {

	@Autowired
	private MCustomerRepository repository;

	@Autowired
	private Convention sorting;

	private Logger log = LogManager.getLogger(MCustomerServiceImpl.class);
	/*
	 * public MCustomerServiceImpl(MCustomerRepository repo) { this.repository =
	 * repo; }
	 * 
	 */

	@Override
	public List<MCustomer> getAll() {
		List<MCustomer> lst;

		try {
			lst = repository.findAll();

		} catch (Exception ex) {
			log.error(ex);
			return Collections.emptyList();
		}
		return lst;
	}

	@Override
	public void saveorupdate(MCustomer obj) {
		repository.saveAndFlush(obj);
	}

	@Override
	public Page<MCustomer> findAllCustomerDetails(ListViewParam request) {

		Pageable paging = sorting.getPaging(sorting.getPageNumber(request.getPageNumber()),
				sorting.getPageSize(request.getPageSize()));
		Page<MCustomer> list = null;

		if (request.getCode() != null && request.getCode().length != 0) {

			list = repository.findByCustCode(request.getCode()[0], paging);

		} else if (!ValidationUtil.isNull(request.getSearch())) {
			String sear = "%" + request.getSearch() + "%";
			list = repository.findAll(sear, paging);
		} else {
			list = repository.findAll(paging);
		}
		return list;
	}
	@Override
	public Optional<MCustomer> findById(String custCode) {
		return repository.findById(custCode);
	}

}
