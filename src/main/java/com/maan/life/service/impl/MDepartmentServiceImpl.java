/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-05-02 ( Date ISO 2022-05-02 - Time 15:42:11 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.life.service.impl;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Optional;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.maan.life.bean.MCompany;
import com.maan.life.bean.MDepartment;
import com.maan.life.dto.ListViewParam;
import com.maan.life.repository.MDepartmentRepository;
import com.maan.life.service.MDepartmentService;
import com.maan.life.util.Convention;
import com.maan.life.util.ValidationUtil;

/**
 * <h2>MDepartmentServiceimpl</h2>
 */
@Service
@Transactional
public class MDepartmentServiceImpl implements MDepartmentService {

	@Autowired
	private MDepartmentRepository repository;

	@Autowired
	private Convention sorting;

	private Logger log = LogManager.getLogger(MDepartmentServiceImpl.class);

	@Override
	public void saveorupdate(MDepartment obj) {
		repository.saveAndFlush(obj);
	}

	@Override
	public List<MDepartment> getAll() {
		List<MDepartment> list = null;
		try {
			list = repository.findAll();
		} catch (Exception ex) {
			log.error("Error in getAll" + ex);
			return Collections.emptyList();
		}
		return list;
	}

	public Optional<MDepartment> findByDeptCode(String deptCode) {
		return repository.findByDeptCode(deptCode);
	}

	public Page<MDepartment> findAllDepartmentDetails(ListViewParam request) {

		Pageable paging = sorting.getPaging(sorting.getPageNumber(request.getPageNumber()),
				sorting.getPageSize(request.getPageSize()));
		Page<MDepartment> list = null;
		if (!ValidationUtil.isNull(request.getSearch())) {
			String sear = "%" + request.getSearch() + "%";
			list = repository.findAll(sear, paging);
		} else if (request.getCode() != null) {
			List<String> o = new ArrayList<String>();
			for (String ob : request.getCode()) {
				o.add(ob);
			}
			list = repository.findByDeptCompCodeAndDeptDivnCode(o.get(0), o.get(1), paging);
		} else {
			list = repository.findAll(paging);
		}
		return list;
	}

	public Page<MDepartment> findByDeptCompCodeAndDeptDivnCode(String depotCompCode, String deptDivnCode,
			Pageable paging) {
		return repository.findByDeptCompCodeAndDeptDivnCode(depotCompCode, deptDivnCode, paging);

	}
}